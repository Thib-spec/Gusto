openapi: 3.0.2
info:
  title: Api Gusto
  description: This is a REST API application for GustoSolution
  # termsOfService: 'http://swagger.io/terms/'
  # contact:
  #   email: apiteam@spotInc.fr
  # license:
  #   name: Apache 2.0
  #   url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
# externalDocs:
#   description: Find out more about Swagger
#   url: 'http://swagger.io'
servers:
  - url: 'http://localhost:3001/api'
  - url: 'https://api.gustosolutions'

tags: [  
    
    {
      "name": "Category",
      "description": ""
    },

    {
      "name": "Client",
      "description": ""
    },

    {
      "name": "Produit",
      "description": ""
    },
    {
      "name": "Utilisateur",
      "description": ""
    },
  
    {
      "name": "Menu",
      "description": ""
    },
    {
      "name": "Frigo",
      "description": ""
    },

  
  ]
paths:
  
  /category:
      get:
        tags: [Category]
        summary: Returns the list of all the categories.
        responses:
          '200':    # status code
            description: A JSON array of categories
            content:
              application/json:
                  example:
                    id_category: 1
                    label: fruits
                    image : https://www.google.com/imgres?imgurl=https%3A%2F%2Fmedia.istockphoto.com
                    description: some description
                    createdAt: 2021-11-26T13:38:27.000Z
                    updatedAt : 2021-11-26T13:38:27.000Z
                    fk_id_client: 8

      post:
        tags: [Category]
        summary: Add a category
        requestBody:
          required: true
          content:
            application/json:
              schema: 
                properties:
                  label:
                    type: string
                  image:
                    type: string
                  description:
                    type: string
                  fk_id_client:
                    type: integer
        responses:
          '200':    # status code
            description: The category added
            content:
              application/json:
                  example:
                    id_category: 1
                    label: fruits
                    image : https://www.google.com/imgres?imgurl=https%3A%2F%2Fmedia.istockphoto.com
                    description: some description
                    createdAt: 2021-11-26T13:38:27.000Z
                    updatedAt : 2021-11-26T13:38:27.000Z
                    fk_id_client: 8
          '400':
            description: An error message
            content:
              application/json:
                  example:
                    message: "Missing required parameters"



  /category/{id}:
      get:
        tags: [Category]
        summary: Returns the specified category.
        parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: Numeric ID of the category to get.
        responses:
          '200':    # status code
            description: The category to get
            content:
              application/json:
                  example:
                    id_category: 1
                    label: fruits
                    image : https://www.google.com/imgres?imgurl=https%3A%2F%2Fmedia.istockphoto.com
                    description: some description
                    createdAt: 2021-11-26T13:38:27.000Z
                    updatedAt : 2021-11-26T13:38:27.000Z
                    fk_id_client: 8
          '400':
            description: An error message
            content:
              application/json:
                  example:
                    message: "Category does not exists"

      put:
        tags: [Category]
        summary: Update category
        parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: Numeric ID of the category to update.
        requestBody:
          required: true
          content:
            application/json:
              schema: 
                properties:
                  label:
                    type: string
                  image:
                    type: string
                  description:
                    type: string
        responses:
          '200':    # status code
            description: A successful message
            content:
              application/json:
                  example:
                    message: "Modification apply"
          '400':
            description: An error message
            content:
              application/json:
                  example:
                    message: "Specified Category does not exist"
              
      delete:
        tags: [Category]
        summary: Allow to delete a category
        parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: Numeric ID of the category to delete.
        responses:
          '200':   
            description: A successful message
            content: 
              application/json:
                  example:
                    message: "Category with id : x has been deleted"
          '400':
            description: An error message
            content:
              application/json:
                  example:
                    message: "Category does not exists"

  /category/{id}/products:
      get:
        tags: [Category]
        summary: Returns all the product that belongs to the specified category.
        parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: Numeric ID of the category to get.
        responses:
          '200':    # status code
            description: A JSON array of products
            content:
              application/json:
                  example:
                    id_product: 1
                    label: pomme
                    image : https://www.google.com/imgres?imgurl=https%3A%2F%2Fmedia.istockphoto.com
                    price: 2
                    ubd: 11-01-2021
                    description: description
                    createdAt: 2021-11-26T13:38:27.000Z
                    updatedAt : 2021-11-26T13:38:27.000Z
                    fk_id_category: 8
          '400':
            description: An error message
            content:
              application/json:
                  example:
                    message: "Category does not exists or doest not have any product"


  /client:
      get:
        tags: [Client]
        summary: Returns the list of all clients.
        responses:
          '200':    # status code
            description: A JSON array of clients
            content:
              application/json:
                  example:
                    id_client: 1
                    label: client1
                    createdAt: 2021-11-26T13:38:27.000Z
                    updatedAt : 2021-11-26T13:38:27.000Z

      post:
        tags: [Client]
        summary: Add a client
        requestBody:
          required: true
          content:
            application/json:
              schema: 
                properties:
                  label:
                    type: string
        responses:
          '200':    # status code
            description: The client added
            content:
              application/json:
                  example:
                    id_category: 1
                    label: client1
                    createdAt: 2021-11-26T13:38:27.000Z
                    updatedAt : 2021-11-26T13:38:27.000Z
          '400':
            description: An error message
            content:
              application/json:
                  example:
                    message: "Missing required parameters"



  /client/{id}:
      get:
        tags: [Client]
        summary: Returns the specified client.
        parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: Numeric ID of the client to get.
        responses:
          '200':    # status code
            description: The client to get
            content:
              application/json:
                  example:
                    id_category: 1
                    label: client1
                    createdAt: 2021-11-26T13:38:27.000Z
                    updatedAt : 2021-11-26T13:38:27.000Z
          '400':
            description: An error message
            content:
              application/json:
                  example:
                    message: "CLient does not exists"

      put:
        tags: [Client]
        summary: Update client
        parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: Numeric ID of the client to update.
        requestBody:
          required: true
          content:
            application/json:
              schema: 
                properties:
                  label:
                    type: string
        responses:
          '200':    # status code
            description: A successful message
            content:
              application/json:
                  example:
                    message: "Modification apply"
          '400':
            description: An error message
            content:
              application/json:
                  example:
                    message: "Specified client does not exist"
              
      delete:
        tags: [Client]
        summary: Delete a client
        parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: Numeric ID of the client to delete.
        responses:
          '200':   
            description: A successful message
            content: 
              application/json:
                  example:
                    message: "Client with id : x has been deleted"
          '400':
            description: An error message
            content:
              application/json:
                  example:
                    message: "Client does not exists"

  /client/{id}/categories:
      get:
        tags: [Client]
        summary: Returns all the categories that belongs to a client.
        parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: Numeric ID of the client to get.
        responses:
          '200':    # status code
            description: A JSON array of categories
            content:
              application/json:
                  example:
                    id_category: 2,
                    label: plats,
                    image: https://www.google.com/imgres?imgurl=https%3A%2F%2Fmedia.istockphoto.com,
                    description: description,
                    createdAt: 2021-11-26T13:38:35.000Z
                    updatedAt: 2021-11-26T13:38:36.000Z
                    fk_id_client: 1
          '400':
            description: An error message
            content:
              application/json:
                  example:
                    message: "Client does not exists or doest not have any categories"


   
             